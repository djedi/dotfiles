#!/usr/bin/env zsh

fixhls() {
	ffmpeg -i "$1" -movflags faststart -acodec copy -vcodec copy -scodec copy "$2"
}

trimhls() {
	ffmpeg -i "$1" -movflags faststart -ss "$2" -acodec copy -vcodec copy -scodec copy "$3"
}

mp4faststart() {
	local original=$1
	mv $original temp.mp4
	ffmpeg -i temp.mp4 -movflags faststart -acodec copy -vcodec copy -scodec copy $original
}

tstoplextv() {
	ffmpeg -i "$1" -c copy -c:s mov_text -metadata:s:s:0 language=eng -metadata:s:s:1 language=ipk "${1%.ts}.mp4"
	cp "${1%.ts}.mp4" /Volumes/Media/TV
}

mp3toringtone() {
	ffmpeg -i "$1" -c:a aac -b:a 192k temp_ringtone.m4a
	mv temp_ringtone.m4a "${1%.mp3}.m4r"
}

txttomp3() {
	say -v Alex -f $1 -o temp.aiff
	ffmpeg -i temp.aiff "$(basename $1 .txt).mp3"
	rm temp.aiff
}

function plexify {
    local YOUTUBE_DIR="$PLEX_VIDEOS/YouTube Downloads"
	if [ -d "$YOUTUBE_DIR" ]; then
		cd $YOUTUBE_DIR
		youtube-dl --no-check-certificate $1
		cd -
	else
		echo "FAIL: Could not cd into $YOUTUBE_DIR"
	fi
}

function tstoplex {

    local new_name="${1%.ts}.mp4"
    ffmpeg -i "$1" -movflags faststart -acodec copy -vcodec copy -scodec copy "$new_name"
    cp "$new_name" "$PLEX_VIDEOS"
}

function mtstoplex {
    local new_name="${1%.mts}.mp4"
    ffmpeg -i "$1" -movflags faststart -acodec copy -vcodec copy -scodec copy "$new_name"
    cp "$new_name" "$PLEX_VIDEOS"
}

function mp3audio {
	local new_name="${1%.m4a}.mp3"
    ffmpeg -i "$1" -vn -ar 24000 -ac 1 -ab 64k "$new_name"
}

# Remove DRM and clip Audible intro and outro
function aax2m4b() {
	local PLEX_DIR=/Volumes/Media/Audiobooks
	local AAXtoMP3_DIR=~/src/p/AAXtoMP3
	local TARGET_DIR=~/Downloads/m4b
	local AUTHCODE=`cat $AAXtoMP3_DIR/.authcode`
	rm -rf $TARGET_DIR
	mkdir -p $TARGET_DIR

	# Remove DRM
	$AAXtoMP3_DIR/AAXtoMP3 --aac -e:m4b --authcode $AUTHCODE --target_dir $TARGET_DIR -D 'converted' -F '$title by $artist' "$1"

	local NEWFILE=`ls $TARGET_DIR/converted/*.m4b`
	local BASENAME=`basename -a $TARGET_DIR/converted/*.m4b`
	echo $NEWFILE

	# Cut Audible intro/outro
	# calculate duration to trim audible end clip
	dur=$(ffprobe -i "$NEWFILE" -show_entries format=duration -v quiet -of csv="p=0")
	dur=$(echo $dur | cut -d "." -f 1 | cut -d "," -f 1)
	trim=$((dur - 6))

	# main work to copy and trim
	ffmpeg -hide_banner -i "$NEWFILE" -ss 2 -t $trim -map 0:a -c copy output.m4b

	# add the cover art back on
	mp4art -q --add $TARGET_DIR/converted/cover.jpg output.m4b

	# move file
	mv output.m4b "$BASENAME"
	cp "$BASENAME" "$PLEX_DIR"
	echo "Copied to $PLEX_DIR"

	# housekeeping
	rm -rf $TARGET_DIR
}
