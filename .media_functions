#!/usr/bin/env zsh

fixhls() {
	ffmpeg -i "$1" -movflags faststart -acodec copy -vcodec copy -scodec copy "$2"
}

trimhls() {
	ffmpeg -i "$1" -movflags faststart -ss "$2" -acodec copy -vcodec copy -scodec copy "$3"
}

mp4faststart() {
	local original=$1
	mv $original temp.mp4
	ffmpeg -i temp.mp4 -movflags faststart -acodec copy -vcodec copy -scodec copy $original
}

tstoplextv() {
	ffmpeg -i "$1" -c copy -c:s mov_text -metadata:s:s:0 language=eng -metadata:s:s:1 language=ipk "${1%.ts}.mp4"
	cp "${1%.ts}.mp4" /Volumes/Media/TV
}

mp3toringtone() {
	ffmpeg -i "$1" -c:a aac -b:a 192k temp_ringtone.m4a
	mv temp_ringtone.m4a "${1%.mp3}.m4r"
}

txttomp3() {
	say -v Alex -f $1 -o temp.aiff
	ffmpeg -i temp.aiff "$(basename $1 .txt).mp3"
	rm temp.aiff
}

function plexify {
    local YOUTUBE_DIR="$PLEX_VIDEOS/YouTube Downloads"
	if [ -d "$YOUTUBE_DIR" ]; then
		cd $YOUTUBE_DIR
		youtube-dl --no-check-certificate $1
		cd -
	else
		echo "FAIL: Could not cd into $YOUTUBE_DIR"
	fi
}

function tstoplex {

    local new_name="${1%.ts}.mp4"
    ffmpeg -i "$1" -movflags faststart -acodec copy -vcodec copy -scodec copy "$new_name"
    cp "$new_name" "$PLEX_VIDEOS"
}

function mtstoplex {
    local new_name="${1%.mts}.mp4"
    ffmpeg -i "$1" -movflags faststart -acodec copy -vcodec copy -scodec copy "$new_name"
    cp "$new_name" "$PLEX_VIDEOS"
}
